"""""""""""""""""""""""""""""""""""""""
" Basic settings
"""""""""""""""""""""""""""""""""""""""
set number
set cindent
set tabstop=2
set shiftwidth=2
set autoindent
set mouse=a

" expand tab to spaces
set expandtab

set tags=./tags
set encoding=utf-8

let mapleader=","

call plug#begin('~/.vim/plugged')

Plug 'vim-scripts/indentpython.vim'
" markdown support
"""""""""""""""""""""""""""""""""""""""
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled = 1

Plug 'Valloric/YouCompleteMe'
autocmd InsertLeave * if pumvisible() == 0|pclose|endif " close preview window after leaving insert mode
"let g:ycm_collect_identifiers_from_tags_files = 1      " open tags search engine of YCM
let g:ycm_collect_identifiers_from_comments_and_strings = 1    " complete search from comments and strings
let g:ycm_seed_identifiers_with_syntax = 1              " syntax key-word complete
"let g:ycm_key_list_select_completion = ['<c-n>', '<Down>'] " in case tab is blocked
"let g:ycm_key_list_select_completion = ['<c-p>', '<Up>']
let g:ycm_complete_in_comments = 1                          " complete in comments
let g:ycm_complete_in_strings = 1                           " complete in strings
let g:ycm_global_ycm_extra_conf='~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'
let g:ycm_show_diagnostics_ui = 0                           " disable syntax check
" config goto subcommand key mapping
nnoremap <C-b> :YcmCompleter GoToDeclaration<CR>
nnoremap <C-n> :YcmCompleter GoToDefinition<CR>
nnoremap <C-e> :YcmCompleter GoToReferences<CR>

" code format
"""""""""""""""""""""""""""""""""""""""
Plug 'rhysd/vim-clang-format'
let g:clang_format#code_style = 'llvm'
map <F3> :ClangFormat<CR> :w<CR>

" white space plugin
Plug 'ntpeters/vim-better-whitespace'
let g:better_whitespace_enabled = 1
let g:strip_whitespace_on_save = 1

" c/cpp highlight
"""""""""""""""""""""""""""""""""""""""
Plug 'octol/vim-cpp-enhanced-highlight'
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_hightlight = 1
let g:cpp_class_decl_highlight = 1

" file tree
"""""""""""""""""""""""""""""""""""""""
Plug 'vim-scripts/The-NERD-tree'
map <F2> :NERDTreeToggle<CR>
let NERDTreeWinSize=25

" optimize the ui
"""""""""""""""""""""""""""""""""""""""
Plug 'vim-airline/vim-airline'
" set the color
set t_Co=128
set laststatus=2
" use fonts of powerline
let g:ariline_powerline_fonts = 1

" set on tabline
let g:airline#extensions#tabline#enabled = 1

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
" Enable per-command history.
" " CTRL-N and CTRL-P will be automatically bound to next-history and
" " previous-history instead of down and up. If you don't like the change,
" " explicitly bind the keys to down and up in your $FZF_DEFAULT_OPTS.
let g:fzf_history_dir = '~/.local/share/fzf-history'
map <C-f> :FZF<CR>

Plug 'majutsushi/tagbar'
"let Tlist_Use_Right_Window=1
"let Tlist_Show_One_File=1
"let Tlist_Exit_OnlyWindow=1
"let Tlist_GainFocus_On_ToggleOpen=1
"let Tlist_WinWidth=32
let g:tagbar_ctags_bin='/usr/bin/ctags'
nmap <F4> :TagbarToggle<CR>

Plug 'xavierd/clang_complete'
" path to directory where library can be found
let g:clang_library_path='/usr/lib/llvm-10/lib'

Plug 'vhdirk/vim-cmake'

Plug 'flazz/vim-colorschemes'

Plug 'puremourning/vimspector'
let g:vimspector_enable_mappings = 'VISUAL_STUDIO'

call plug#end()

" set background=dark
colorscheme spacegray

"""""""""""""""""""""""""""""""""""""""
" keyboard cmd
"""""""""""""""""""""""""""""""""""""""
" select all and copy all
map <C-A> ggVGY
map! <C-A> <Esc>ggVGY
" ctrl + c to copy
vmap <C-c> "+y

"""""""""""""""""""""""""""""""""""""""
" tabular jump key re-direction
"""""""""""""""""""""""""""""""""""""""
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
map <C-h> <C-w>h

"""""""""""""""""""""""""""""""""""""""
" other settings
"""""""""""""""""""""""""""""""""""""""
" file changed auto load to file
set autoread

" share clipboard
set clipboard=unnamed

" auto write
set autowrite

" set ruler
set ruler
